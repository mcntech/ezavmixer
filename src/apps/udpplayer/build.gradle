buildscript {
    ext.kotlin_version = '1.1.1'
    repositories {
        jcenter()
        google()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.1.2'
    }
}
apply plugin: 'com.android.application'

dependencies {
    implementation fileTree(include: '*.jar', dir: 'libs')
}

android {
    signingConfigs {
        udpplayer {
            keyAlias 'udpplayer'
            keyPassword 'udpplayer'
            storeFile file('./udpplayer.jks')
            storePassword 'udpplayer'
        }
    }
    compileSdkVersion 26
    buildToolsVersion '27.0.3'
    aaptOptions { cruncherEnabled = false }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
    defaultConfig {
        externalNativeBuild {
            cmake {
                cppFlags "-std=c++11"
                cppFlags += "-DPLATFORM_ANDROID"
                arguments "-DANDROID_CPP_FEATURES=rtti exceptions", "-DANDROID_STL=c++_static"
                //abiFilters 'armeabi', 'armeabi-v7a', 'arm64-v8a'
                abiFilters 'armeabi-v7a', 'arm64-v8a'
            }
        }
    }
    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }

        // Move the tests to tests/java, tests/res, etc...
        //instrumentTest.setRoot('tests')

        // Move the build types to build-types/<type>
        // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
        // This moves them out of them default location under src/<type>/... which would
        // conflict with src/ being used by the main source set.
        // Adding new build types or product flavors should be accompanied
        // by a similar customization.
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }
    externalNativeBuild {
        cmake {
            path 'jni/CMakeLists.txt'
        }
    }
    buildTypes {
        release {
            signingConfig signingConfigs.udpplayer
        }
        debug {
            signingConfig signingConfigs.udpplayer
            debuggable true
            jniDebuggable true
        }
    }
}
